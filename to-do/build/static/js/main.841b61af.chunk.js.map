{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","evt","term","target","value","setState","state","type","placeholder","onChange","Component","TodoListItem","_this$props","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","objectWithoutProperties","key","components_todo_list_item","assign","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","concat","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","deleteItem","todoData","idx","findIndex","el","toConsumableArray","slice","addItem","text","newItem","createTodoItem","_ref2","_ref3","toggleProperty","_ref4","maxId","arr","propName","oldItem","objectSpread","defineProperty","items","length","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","components_app_header","components_search_panel","components_item_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.841b61af.chunk.js","sourcesContent":["import AppHeader from './app-header.js';\r\n\r\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {term: ''};\n  }\n\n  onSearchChange = (evt) => {\n    const term = evt.target.value;\n    this.setState({ term });\n    this.props.onSearchChange(term);\n  };\n\n  render() {\n    return (\n      <input type=\"text\"\n                className=\"form-control search-input\"\n                placeholder=\"type to search\"\n                value={this.state.term}\n                onChange={this.onSearchChange} />\n    );\n  }\n};","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React , {Component} from 'react';\n\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n\n  render() {\n    const { label, onDeleted,\n            onToggleImportant,\n            onToggleDone,\n            done, important} = this.props;\n\n    let classNames = 'todo-list-item';\n    \n    \n\n    done && (classNames += ' done');\n    important && (classNames += ' important');\n\n    return (\n      <span className={classNames}>\n        <span\n          className=\"todo-list-item-label\"\n          onClick={ onToggleDone } >\n          {label}\n        </span>\n\n        <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right\"\n                onClick={onToggleImportant} >\n          <i className=\"fa fa-exclamation\" />\n        </button>\n\n        <button type=\"button\"\n                className=\"btn btn-outline-danger btn-sm float-right\"\n                onClick={onDeleted}>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  };\n}\n\n\n\n\n\n\n\n\n\n\n/*const TodoListItemF = ({ label, important = false }) => {\n\n  const style = {\n    color: important ? 'steelblue' : 'black',\n    fontWeight: important ? 'bold' : 'normal'\n  };\n\n  return (\n    <span className=\"todo-list-item\">\n      <span\n        className=\"todo-list-item-label\"\n        style={style}>\n        {label}\n      </span>\n\n      <button type=\"button\"\n              className=\"btn btn-outline-success btn-sm float-right\">\n        <i className=\"fa fa-exclamation\" />\n      </button>\n\n      <button type=\"button\"\n              className=\"btn btn-outline-danger btn-sm float-right\">\n        <i className=\"fa fa-trash-o\" />\n      </button>\n    </span>\n  );\n};*/\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\n\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted,\n                  onToggleImportant,\n                  onToggleDone }) => {\n\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem\n          {...itemProps } \n          onDeleted={() => onDeleted(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleDone={() => onToggleDone(id)}\n        />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\n\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n  constructor(props) {\n    super(props);\n    this.buttons = [\n      { name: 'all', label: 'All'},\n      { name: 'active', label: 'Active'},\n      { name: 'done', label: 'Done'}\n    ];\n  }\n\n\n  render() {\n    const { filter, onFilterChange } = this.props;\n    const buttons = this.buttons.map(({name, label}) => {\n      const isActive = filter === name;\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\n      return (\n        <button type=\"button\"\n            className={`btn ${clazz}`}\n            key={name}\n            onClick={() => onFilterChange(name)}>\n          {label}\n        </button>\n      );\n    });\n\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  };\n};\n","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;","import React, { Component } from 'react';\nimport './item-add-form.css';\n\n//контролируемый компонент - значение (value) получает из state\n//state - единственный источник значений\n\nexport default class ItemAddForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            label: ''\n        }\n    }\n\n    onLabelChange = (evt) => {\n        this.setState({\n            label: evt.target.value\n        });\n    };\n\n    onSubmit = (evt) => {\n        evt.preventDefault();\n        this.props.onItemAdded(this.state.label);\n        this.setState({\n            label: ''\n        });\n    };\n\n    render() {\n        return (\n            <form className='item-add-form d-flex'\n                    onSubmit={this.onSubmit}>\n                <input type='text'\n                        className='form-control'\n                        onChange={this.onLabelChange}\n                        placeholder='What needs to be done'\n                        value={this.state.label} />\n                <button\n                    className='btn btn-outline-secondary'>\n                    Add Item\n                </button>\n            </form>\n        )\n    }\n}","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.maxId = 100;\r\n\r\n    this.state = {\r\n      todoData : [\r\n        this.createTodoItem('Drink Coffee'),\r\n        this.createTodoItem('Make Awesome App'),\r\n        this.createTodoItem('Have a lunch')\r\n      ],\r\n      term: '',\r\n      filter: 'all' //active, all, done\r\n    }\r\n  }\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label: label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    };\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n      const newArray = [\r\n        ...todoData.slice(0, idx),\r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n\r\n      return {\r\n        todoData: newArray\r\n      };\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({todoData}) => {\r\n      const newArr = [\r\n        ...todoData,\r\n        newItem\r\n      ];\r\n\r\n      return {\r\n        todoData: newArr\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = {...oldItem,\r\n      [propName]: !oldItem[propName]};\r\n\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  }\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      }\r\n    });\r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      }\r\n    });\r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState( { term: term } );\r\n  };\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState( { filter: filter } );\r\n  };\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) return items;\r\n    return items.filter((item) => {\r\n      return item.label\r\n        .toLowerCase()\r\n        .indexOf(term.toLowerCase()) > -1;\r\n    });\r\n  };\r\n\r\n  filter(items, filter) {\r\n    switch(filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { todoData, term, filter } = this.state;\r\n\r\n    const visibleItems = this.filter(\r\n      this.search(todoData, term), filter);\r\n    const doneCount = todoData\r\n                          .filter((el) => el.done)\r\n                          .length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel\r\n            onSearchChange={this.onSearchChange}/>\r\n          <ItemStatusFilter\r\n            filter={filter}\r\n            onFilterChange={this.onFilterChange} />\r\n        </div>\r\n\r\n        <TodoList\r\n          todos={visibleItems}\r\n          onDeleted={ this.deleteItem }\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone} />\r\n\r\n        <ItemAddForm\r\n          onItemAdded={this.addItem} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));"],"sourceRoot":""}